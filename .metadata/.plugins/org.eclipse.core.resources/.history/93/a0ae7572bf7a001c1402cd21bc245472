/**
 * Se utiliza PreparedStatements para mejorar la eficiencia y seguridad de las consultas a la BD.
 * 
 * */

package com.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class PrepararStatements {
	
	public static PreparedStatement stmCrear = null;
	public static PreparedStatement stmAct = null;
	
	public static void prepararStatements(Connection con) {
		crearPreparedStatementCreacion(con);
		crearPreparedStatementActualizar(con);
		crearPreparedStatementEliminar(con);
		crearPreparedStatementVerListaProductos(con);
	}
	
	private static void crearPreparedStatementCreacion(Connection con) {
		String sql="INSERT INTO productos values (NULL,?,?,?)";
		try {
			if (null == stmCrear) stmCrear = con.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);
		} catch (SQLException e) {
			System.out.println("Error: Clase PrepararStatements - crearPreparedStatementCreacion");
			e.printStackTrace();
		}
	}
	
	private static void crearPreparedStatementActualizar(Connection con) {
		String sql="UPDATE PRODUCTOS SET nombre=?, marca=?, descripcion=? WHERE ID=?";
		try {
			if (null == stmAct) stmAct = con.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);
		} catch (SQLException e) {
			System.out.println("Error: Clase PrepararStatements - crearPreparedStatementActualizar");
			e.printStackTrace();
		}
	}
	
}
